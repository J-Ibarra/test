language: node_js
node_js:
  - '10.13'
addons:
  apt:
    packages:
      - docker-ce
  hosts:
    - 127.0.0.1 redis
    - 127.0.0.1 local.kinesisgroup.io
  postgresql: '9.6'
services:
  - docker
  - redis-server
  - postgresql
before_install:
  - sudo rm /usr/local/bin/docker-compose
  - curl -L https://github.com/docker/compose/releases/download/1.22.0/docker-compose-`uname -s`-`uname -m` > docker-compose
  - chmod +x docker-compose
  - sudo mv docker-compose /usr/local/bin
  - pip install --user awscli
  - export PATH=$PATH:$HOME/.local/bin
  - aws configure set profile.kinesis.aws_secret_access_key $AWS_SECRET_ACCESS_KEY
  - aws configure set profile.kinesis.aws_access_key_id $AWS_ACCESS_KEY_ID
  - aws configure set profile.kinesis.region ap-southeast-2
  - git fetch
before_script:
  - psql -c 'create database kinesis_exchange;' -U postgres

jobs:
  include:
    - stage: test
      if: tag IS blank and branch != develop #if it is a tag we don't want to run the tests, they would have run already
      script:
        - ./_scripts/travis/travis-build-branch-checkout.sh
        - npm link
        - npm run bootstrap
        - lerna run build --since develop --include-dependencies --exclude-dependents
        - npm run run-legacy-migrations:test
        - lerna run test --since develop --include-dependencies --exclude-dependents
    - stage: 'Build image and push to ECR'
      if: (branch = develop OR branch =~ /^feature+/) AND type = push
      script:
        - ./_scripts/travis/travis-build-service-release.sh
