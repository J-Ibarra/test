language: node_js
node_js:
  - '10.13'
addons:
  apt:
    packages:
      - docker-ce
  hosts:
    - 127.0.0.1 redis
    - 127.0.0.1 local.kinesisgroup.io
  postgresql: '9.6'
services:
  - docker
  - redis-server
  - postgresql
env:
  - DOCKER_COMPOSE_VERSION=1.4.2
before_install:
  - sudo rm /usr/local/bin/docker-compose
  - curl -L https://github.com/docker/compose/releases/download/1.22.0/docker-compose-`uname -s`-`uname -m` > docker-compose
  - chmod +x docker-compose
  - sudo mv docker-compose /usr/local/bin
  - pip install --user awscli
  - export PATH=$PATH:$HOME/.local/bin
  - aws configure set profile.kinesis.aws_secret_access_key $AWS_SECRET_ACCESS_KEY
  - aws configure set profile.kinesis.aws_access_key_id $AWS_ACCESS_KEY_ID
  - aws configure set profile.kinesis.region ap-southeast-2
  - gem install bundler --version '2.0.2'
before_script:
  - psql -c 'create database kinesis_exchange;' -U postgres

jobs:
  include:
    #The following scripts trigger parallel test runs for the different functional areas, grouped in pairs
    # !!!! ONLY FOR THE SERVICES WHERE THERE WERE CHANGES
    - script: ./_scripts/travis/travis-build-test-execution.sh '{@abx/exchange-deposit-service,@abx/exchange-reference-data-service}'
      if: tag IS blank and branch != develop
      name: Build & Test Deposit and Reference Data Functional Areas
    - script: ./_scripts/travis/travis-build-test-execution.sh '{@abx/exchange-withdrawal-service,@abx/exchange-balance-service}'
      if: tag IS blank and branch != develop
      name: Build & Test Withdrawal and Balance Functional Areas
    - script: ./_scripts/travis/travis-build-test-execution.sh '{@abx/exchange-scheduler-service,@abx/exchange-reports-service,@abx/exchange-account-data-service}'
      if: tag IS blank and branch != develop
      name: Build & Test Scheduler, Reports and Account Functional Areas
    - script: ./_scripts/travis/travis-build-test-execution.sh '{@abx/exchange-notification-service,@abx/admin-fund-management-service}'
      if: tag IS blank and branch != develop
      name: Build & Test Notification and Admin Fund Management Functional Areas
    - script: ./_scripts/travis/travis-build-test-execution.sh '{@abx/order-service,@abx/exchange-market-data-service}'
      if: tag IS blank and branch != develop
      name: Build & Test Order and Market Data Functional Areas

      #The following scripts trigger parallel image build for the different functional areas
      # !!!! ONLY FOR THE SERVICES WHERE THERE WERE CHANGES
    - script: ./_scripts/travis/travis-build-service-release.sh '{@abx/exchange-balance-service,@abx/exchange-reference-data-service}'
      if: branch = develop and type = push
      name: 'Build Balance and Reference Data image and push to ECR'
    - script: ./_scripts/travis/travis-build-service-release.sh '{@abx/exchange-report-service,@abx/exchange-scheduler-service,@abx/exchange-account-data-service}'
      if: branch = develop and type = push
      name: 'Build Reports, Scheduler and Account  images and push to ECR'
    - script: ./_scripts/travis/travis-build-service-release.sh '{@abx/exchange-withdrawal-service,@abx/exchange-notification-service}'
      if: branch = develop and type = push
      name: 'Build Withdrawal and Notification image and push to ECR'
    - script: ./_scripts/travis/travis-build-service-release.sh '{@abx/order-service,@abx/exchange-market-data-service}'
      if: branch = develop and type = push
      name: 'Build Order and Market Data images and push to ECR'
    - script: ./_scripts/travis/travis-build-service-release.sh '{@abx/exchange-deposit-service,@abx/admin-fund-management-service}'
      if: branch = develop and type = push
      name: 'Build Deposit and Fund Admin image and push to ECR'

    # Triggered after a push to develop branch, generating the latest API documentation
    - script:
        - npm run bootstrap:production
        - npm run build
        - cd packages/services/_api-docs
        - bundle install
        - npm run build:docs
        - npm run push-api-docs-to-s3
      if: branch = develop and type = push
      name: 'Build latest api docs and push to s3'
